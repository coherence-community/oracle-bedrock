<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.oracle.bedrock</groupId>
    <artifactId>project</artifactId>
    <version>5.1.3-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Bedrock Project</name>

    <description>
        A framework for the development, orchestration and testing of
        concurrent and distributed applications.

        Developed as part of the Oracle Coherence Community, though Oracle
        Coherence is not really required.
    </description>

    <url>https://github.com/coherence-community/bedrock</url>

    <licenses>
        <license>
            <name>Common Development and Distribution License 1.0 ("CDDL")</name>
            <url>http://opensource.org/licenses/CDDL-1.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Brian Oliver</name>
            <organization>Oracle Corporation</organization>
            <email>brian.oliver@oracle.com</email>
        </developer>

        <developer>
            <name>Jonathan Knight (aka: Gridman)</name>
            <organization>Oracle Corporation</organization>
            <email>jonathan.knight@oracle.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/coherence-community/oracle-bedrock.git</connection>
        <developerConnection>scm:git:https://github.com/coherence-community/oracle-bedrock.git</developerConnection>
        <url>https://github.com/coherence-community/oracle-bedrock.git</url>
      <tag>4.0.0</tag>
    </scm>

    <modules>
        <module>bedrock-core</module>

        <module>bedrock-runtime</module>
        <module>bedrock-runtime-tests</module>

        <module>bedrock-runtime-maven</module>
        <module>bedrock-runtime-maven-tests</module>

        <module>bedrock-runtime-jacoco</module>
        <module>bedrock-runtime-jprofiler</module>

        <module>bedrock-testing-support</module>
        <module>bedrock-testing-support-tests</module>

        <module>bedrock-runtime-remote</module>
        <module>bedrock-runtime-remote-tests</module>

        <module>bedrock-runtime-virtual</module>
        <module>bedrock-runtime-virtual-tests</module>

        <module>bedrock-runtime-windows</module>
        <module>bedrock-runtime-windows-tests</module>

        <module>bedrock-runtime-docker</module>
        <module>bedrock-runtime-docker-tests</module>

        <module>bedrock-runtime-vagrant</module>
        <module>bedrock-runtime-vagrant-tests</module>

        <module>bedrock-runtime-k8s</module>

        <module>bedrock-coherence</module>
    </modules>

    <properties>
        <!-- project options -->
        <skip-sign-artifacts>true</skip-sign-artifacts>
        <skip-remote-tests>true</skip-remote-tests>

        <!--
            defines the maven.java.net repository that should be targeted for download links
            when generating latest project documentation valid options: snapshots, releases
          -->
        <repository>snapshots</repository>

        <!-- the version of java required to build -->
        <java.version>1.8</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- plugin dependency versions -->
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
        <maven.doxia.markdown.plugin.version>1.6</maven.doxia.markdown.plugin.version>
        <maven.enforcer.plugin.version>3.0.0-M3</maven.enforcer.plugin.version>
        <maven.failsafe.plugin.version>3.0.0-M5</maven.failsafe.plugin.version>
        <maven.flatten.plugin.version>1.2.2</maven.flatten.plugin.version>
        <maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
        <maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
        <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
        <maven.release.plugin.version>3.0.0-M1</maven.release.plugin.version>
        <maven.shade.plugin.version>3.2.4</maven.shade.plugin.version>
        <maven.site.plugin.version>3.9.1</maven.site.plugin.version>
        <maven.source.plugin.version>3.2.0</maven.source.plugin.version>
        <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
        <maven.license.plugin.version>3.0</maven.license.plugin.version>

        <!-- dependency versions -->
        <aether.version>1.1.0</aether.version>
        <glassfish.el.version>3.0.1-b08</glassfish.el.version>
        <hamcrest.version>1.3</hamcrest.version>
        <glassfish.json.version>1.0.4</glassfish.json.version>
        <jacoco.version>0.8.2</jacoco.version>
        <javax.json.version>1.1.2</javax.json.version>
        <javax.xml.bind.version>2.3.0</javax.xml.bind.version>
        <javax.xml.ws.version>2.3.0</javax.xml.ws.version>
        <jprofiler.version>9.1.1</jprofiler.version>
        <jsch.version>0.1.54</jsch.version>
        <junit.version>4.13.1</junit.version>
        <junit.five.version>5.7.1</junit.five.version>
        <junit.jupiter.version>5.7.0</junit.jupiter.version>
        <junit.vintage.version>5.7.0</junit.vintage.version>
        <maven.aether.version>3.3.9</maven.aether.version>
        <mockito.version>2.20.1</mockito.version>
        <p4.version>2019.1.1889202</p4.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencyManagement>
        <!-- enforce specific versions of dependencies -->
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.five.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.five.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${glassfish.el.version}</version>
            </dependency>

            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>

            <dependency>
                <groupId>com.perforce</groupId>
                <artifactId>p4java</artifactId>
                <version>${p4.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven.license.plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <testSource>${java.version}</testSource>
                    <testTarget>${java.version}</testTarget>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-plugin-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <argLine>-Xms800m -Xmx800m</argLine>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <configuration>
                    <argLine>-Xms800m -Xmx800m</argLine>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                    </systemPropertyVariables>
                    <reuseForks>false</reuseForks>
                </configuration>
                <executions>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven.flatten.plugin.version}</version>
                <configuration>
                    <flattenMode>ossrh</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <goals>deploy</goals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven.gpg.plugin.version}</version>
                <configuration>
                    <skip>${skip-sign-artifacts}</skip>
                    <gpgArguments>
                        <arg>--pinentry-mode</arg>
                        <arg>loopback</arg>
                    </gpgArguments>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>${maven.jar.plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>coherence-commercial</id>
            <activation>
                <!-- This is a work-around for the fact that activeByDefault does not do what you'd think it should -->
                <file><exists>.</exists></file>
            </activation>
        </profile>
    </profiles>
</project>
